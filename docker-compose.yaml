version: '2'

services:
  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"

  graphite:
    image: graphiteapp/graphite-statsd
    ports:
      - "2003:2003"

  config:
    image: 'config:latest'
    build:
      context: ./config
      dockerfile: Dockerfile
    container_name: config
    environment:
      - EUREKA_URL=http://discovery:8761/eureka
      - APP_CONFIG_REPO=https://github.com/VitaliiLapov96/application-config-repo.git
    ports:
      - "8888:8888"
    restart: always
    healthcheck:
      interval: 10s
      timeout: 5s
      retries: 5

  discovery:
    image: 'discovery:latest'
    build:
      context: ./discovery
      dockerfile: Dockerfile
    container_name: discovery
    restart: always
    ports:
      - "8761:8761"
    depends_on:
      - config
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://config:8888/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    image: 'apigateway:latest'
    build:
      context: ./apigateway
      dockerfile: Dockerfile
    container_name: apigateway
    environment:
      - EUREKA_URL=http://discovery:8761/eureka
    ports:
      - "8764:8764"
    depends_on:
      - config
      - discovery
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://api-gateway:8764/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  event-app:
    image: 'event-core:latest'
    build:
      context: ./core
      dockerfile: Dockerfile
    container_name: event-core
    ports:
      - "8080:8080"
    depends_on:
      - config
      - db
      - discovery
      - api-gateway
      - zipkin
      - graphite
    environment:
      - MY_POSTGRES_URL=jdbc:postgresql://db:5432/events
      - USERNAME=postgres
      - PASSWORD=postgres
      - EUREKA_URL=http://discovery:8761/eureka
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://event-app:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: 'postgres:13.1-alpine'
    container_name: db
    ports:
      - "8082:8082"
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=Root123
      - POSTGRES_DB=events

  data-generator:
    image: 'data-generator:latest'
    build:
      context: ./data-generator
      dockerfile: Dockerfile
    container_name: data-generator
    ports:
      - "8081:8081"
    depends_on:
      - config
      - discovery
      - api-gateway
      - zipkin
      - graphite
    environment:
      - EUREKA_URL=http://discovery:8761/eureka
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://data-generator:8081/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5